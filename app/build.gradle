plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
secrets {
    // Optionally specify a different file name containing your secrets.
    // The plugin defaults to "local.properties"
    propertiesFileName = "secrets.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.properties"

    // Configure which keys should be ignored by the plugin by providing regular expressions.
    // "sdk.dir" is ignored by default.
    ignoreList.add("keyToIgnore") // Ignore the key "keyToIgnore"
    ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
}
def localProperties =  new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
android {
    signingConfigs {
        release {
            storeFile file('C:\\Users\\kd\\Downloads\\masrofyKey.jks')
            storePassword 'alamode151412'
            keyAlias 'salmanalamode15'
            keyPassword 'Salmanalamode15'
        }
    }

    namespace 'com.masrofy'
    compileSdk 33

    defaultConfig {
        applicationId "com.masrofy"
        minSdk 28
        targetSdk 33
        versionCode 6
        versionName "3.5.0"

            kapt {
                arguments {
                    arg("room.schemaLocation", "$projectDir/schemas")
                }
            }

        testInstrumentationRunner "com.masrofy.HiltTestRunner"

        buildConfigField("String","ADMOB_ID",localProperties.getProperty("ADMOB_ID"))
        buildConfigField("String","ADMOB_ADS_ID",localProperties.getProperty("ADMOB_ADS_ID"))
        buildConfigField("String","ADMOBE_BANNER_UNIT_ID",localProperties.getProperty("ADMOBE_BANNER_UNIT_ID"))

        manifestPlaceholders = [ADMOB_ID:localProperties.getProperty("ADMOB_ID")]
        vectorDrawables {
            useSupportLibrary true
        }
    }
    kapt {
        correctErrorTypes true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }
        debug {
            applicationIdSuffix '.debug'
        }
        benchmark {
            matchingFallbacks = ['release']
            initWith buildTypes.release
        }
        AppCenter {
            initWith buildTypes.release
            applicationIdSuffix '.appReleaseCenter'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.6.1")
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "androidx.profileinstaller:profileinstaller:1.3.1"
    def room_version = "2.5.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    testImplementation "androidx.room:room-testing:$room_version"

    // hilt
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44.2'


    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    def nav_version = "2.6.0"

    implementation "androidx.navigation:navigation-compose:$nav_version"
    // date picker
//    implementation("com.marosseleng.android:compose-material3-datetime-pickers:0.7.2")

    implementation "com.github.PhilJay:MPAndroidChart:v3.1.0"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1"

    implementation "androidx.compose.runtime:runtime:1.4.3"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'com.google.android.gms:play-services-ads:22.1.0'

    testImplementation "com.google.truth:truth:1.1.4"
    androidTestImplementation "com.google.truth:truth:1.1.4"
    testImplementation 'app.cash.turbine:turbine:1.0.0'

    implementation "com.patrykandpatrick.vico:compose-m3:1.6.5"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'org.burnoutcrew.composereorderable:reorderable:0.9.6'
}